{"ast":null,"code":"var _jsxFileName = \"/Users/nuno/temp/pinder_dev/src/components/CardList.js\";\nimport React from 'react';\nimport Card from './Card';\nimport PetDetails from './PetDetails';\n\nfunction CardList({\n  pets,\n  images,\n  onPetSelection,\n  isPetSelected\n}) {\n  console.log(isPetSelected);\n  const cards = [];\n  const defaultPhotos = [];\n\n  function callbackFunction(childData) {\n    let meh = childData;\n  }\n\n  images.map((img, i) => {\n    if (images[i].defaultPic) {\n      defaultPhotos.push(images[i]);\n    }\n  });\n  defaultPhotos.map((photo, i) => {\n    pets.map((pet, j) => {\n      if (defaultPhotos[i].pets_id === pets[j].id) {\n        cards.push(React.createElement(Card, {\n          parentCallback: callbackFunction,\n          onPetSelection: onPetSelection,\n          key: pets[j].id,\n          pk: pets[j].id,\n          img: 'http://localhost:4412/api/file/' + defaultPhotos[i].url,\n          name: pets[j].name,\n          description: pets[j].description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }));\n      }\n    });\n  });\n\n  if (!isPetSelected) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, cards);\n  } else {\n    return React.createElement(PetDetails, {\n      isPetSelected: isPetSelected,\n      onPetSelection: onPetSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  }\n}\n\nexport default CardList;","map":{"version":3,"sources":["/Users/nuno/temp/pinder_dev/src/components/CardList.js"],"names":["React","Card","PetDetails","CardList","pets","images","onPetSelection","isPetSelected","console","log","cards","defaultPhotos","callbackFunction","childData","meh","map","img","i","defaultPic","push","photo","pet","j","pets_id","id","url","name","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,cAAhB;AAAgCC,EAAAA;AAAhC,CAAlB,EAAmE;AAClEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;AACA,QAAMG,KAAK,GAAG,EAAd;AACA,QAAMC,aAAa,GAAG,EAAtB;;AAEA,WAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAClC,QAAIC,GAAG,GAAGD,SAAV;AACD;;AAEFR,EAAAA,MAAM,CAACU,GAAP,CAAW,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtB,QAAIZ,MAAM,CAACY,CAAD,CAAN,CAAUC,UAAd,EAA0B;AACzBP,MAAAA,aAAa,CAACQ,IAAd,CAAmBd,MAAM,CAACY,CAAD,CAAzB;AACA;AACD,GAJD;AAMAN,EAAAA,aAAa,CAACI,GAAd,CAAkB,CAACK,KAAD,EAAQH,CAAR,KAAc;AAC/Bb,IAAAA,IAAI,CAACW,GAAL,CAAS,CAACM,GAAD,EAAMC,CAAN,KAAY;AACpB,UAAGX,aAAa,CAACM,CAAD,CAAb,CAAiBM,OAAjB,KAA6BnB,IAAI,CAACkB,CAAD,CAAJ,CAAQE,EAAxC,EAA4C;AAC3Cd,QAAAA,KAAK,CAACS,IAAN,CAAW,oBAAC,IAAD;AAAM,UAAA,cAAc,EAAEP,gBAAtB;AAAwC,UAAA,cAAc,EAAEN,cAAxD;AAAwE,UAAA,GAAG,EAAEF,IAAI,CAACkB,CAAD,CAAJ,CAAQE,EAArF;AAAyF,UAAA,EAAE,EAAEpB,IAAI,CAACkB,CAAD,CAAJ,CAAQE,EAArG;AAAyG,UAAA,GAAG,EAAE,oCAAoCb,aAAa,CAACM,CAAD,CAAb,CAAiBQ,GAAnK;AAAwK,UAAA,IAAI,EAAErB,IAAI,CAACkB,CAAD,CAAJ,CAAQI,IAAtL;AAA4L,UAAA,WAAW,EAAEtB,IAAI,CAACkB,CAAD,CAAJ,CAAQK,WAAjN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACA;AACD,KAJD;AAKA,GAND;;AAQA,MAAI,CAACpB,aAAL,EAAoB;AACnB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMG,KAAN,CAAP;AACA,GAFD,MAEO;AACN,WAAO,oBAAC,UAAD;AAAY,MAAA,aAAa,EAAEH,aAA3B;AAA0C,MAAA,cAAc,EAAED,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;AAED;;AAED,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport PetDetails from './PetDetails';\n\nfunction CardList({ pets, images, onPetSelection, isPetSelected }) {\n\tconsole.log(isPetSelected);\n\tconst cards = [];\n\tconst defaultPhotos = [];\n\n\tfunction callbackFunction(childData) {\n    let meh = childData;\n  }\n\n\timages.map((img, i) => {\n\t\tif (images[i].defaultPic) {\n\t\t\tdefaultPhotos.push(images[i]);\n\t\t}\n\t});\n\n\tdefaultPhotos.map((photo, i) => {\n\t\tpets.map((pet, j) => {\n\t\t\tif(defaultPhotos[i].pets_id === pets[j].id) {\n\t\t\t\tcards.push(<Card parentCallback={callbackFunction} onPetSelection={onPetSelection} key={pets[j].id} pk={pets[j].id} img={'http://localhost:4412/api/file/' + defaultPhotos[i].url} name={pets[j].name} description={pets[j].description}/>);\n\t\t\t}\n\t\t});\n\t});\n\n\tif (!isPetSelected) {\n\t\treturn <div>{cards}</div>;\n\t} else {\n\t\treturn <PetDetails isPetSelected={isPetSelected} onPetSelection={onPetSelection}/>\n\t}\n\t\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}