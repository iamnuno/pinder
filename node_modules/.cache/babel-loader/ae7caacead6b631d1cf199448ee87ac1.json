{"ast":null,"code":"var _jsxFileName = \"/Users/nuno/temp/pinder_dev/src/components/CardList.js\";\nimport React from 'react';\nimport Card from './Card';\nimport PetDetails from './PetDetails';\n\nfunction CardList({\n  pets,\n  images,\n  onPetSelection,\n  isPetSelected,\n  selectedPetPk,\n  onSearchChange,\n  petLikes\n}) {\n  console.log(isPetSelected);\n  const cards = [];\n  const defaultPhotos = [];\n  images.map((img, i) => {\n    if (images[i].defaultPic) {\n      defaultPhotos.push(images[i]);\n    }\n  });\n  defaultPhotos.map((photo, i) => {\n    pets.map((pet, j) => {\n      if (defaultPhotos[i].pets_id === pets[j].id) {\n        cards.push(React.createElement(Card, {\n          selectedPetPk: selectedPetPk,\n          onPetSelection: onPetSelection,\n          key: pets[j].id,\n          pk: pets[j].id,\n          img: 'http://localhost:4412/api/file/' + defaultPhotos[i].url,\n          name: pets[j].name,\n          description: pets[j].description,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }));\n      }\n    });\n  });\n\n  if (!isPetSelected) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, cards);\n  } else {\n    return React.createElement(PetDetails, {\n      searchChange: onSearchChange,\n      images: images,\n      pets: pets,\n      petLikes: petLikes,\n      selectedPetPk: selectedPetPk,\n      isPetSelected: isPetSelected,\n      onPetSelection: onPetSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    });\n  }\n}\n\nexport default CardList;","map":{"version":3,"sources":["/Users/nuno/temp/pinder_dev/src/components/CardList.js"],"names":["React","Card","PetDetails","CardList","pets","images","onPetSelection","isPetSelected","selectedPetPk","onSearchChange","petLikes","console","log","cards","defaultPhotos","map","img","i","defaultPic","push","photo","pet","j","pets_id","id","url","name","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,cAAhB;AAAgCC,EAAAA,aAAhC;AAA+CC,EAAAA,aAA/C;AAA8DC,EAAAA,cAA9D;AAA8EC,EAAAA;AAA9E,CAAlB,EAA4G;AAC3GC,EAAAA,OAAO,CAACC,GAAR,CAAYL,aAAZ;AACA,QAAMM,KAAK,GAAG,EAAd;AACA,QAAMC,aAAa,GAAG,EAAtB;AAEAT,EAAAA,MAAM,CAACU,GAAP,CAAW,CAACC,GAAD,EAAMC,CAAN,KAAY;AACtB,QAAIZ,MAAM,CAACY,CAAD,CAAN,CAAUC,UAAd,EAA0B;AACzBJ,MAAAA,aAAa,CAACK,IAAd,CAAmBd,MAAM,CAACY,CAAD,CAAzB;AACA;AACD,GAJD;AAMAH,EAAAA,aAAa,CAACC,GAAd,CAAkB,CAACK,KAAD,EAAQH,CAAR,KAAc;AAC/Bb,IAAAA,IAAI,CAACW,GAAL,CAAS,CAACM,GAAD,EAAMC,CAAN,KAAY;AACpB,UAAGR,aAAa,CAACG,CAAD,CAAb,CAAiBM,OAAjB,KAA6BnB,IAAI,CAACkB,CAAD,CAAJ,CAAQE,EAAxC,EAA4C;AAC3CX,QAAAA,KAAK,CAACM,IAAN,CAAW,oBAAC,IAAD;AAAM,UAAA,aAAa,EAAEX,aAArB;AAAoC,UAAA,cAAc,EAAEF,cAApD;AAAoE,UAAA,GAAG,EAAEF,IAAI,CAACkB,CAAD,CAAJ,CAAQE,EAAjF;AAAqF,UAAA,EAAE,EAAEpB,IAAI,CAACkB,CAAD,CAAJ,CAAQE,EAAjG;AAAqG,UAAA,GAAG,EAAE,oCAAoCV,aAAa,CAACG,CAAD,CAAb,CAAiBQ,GAA/J;AAAoK,UAAA,IAAI,EAAErB,IAAI,CAACkB,CAAD,CAAJ,CAAQI,IAAlL;AAAwL,UAAA,WAAW,EAAEtB,IAAI,CAACkB,CAAD,CAAJ,CAAQK,WAA7M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX;AACA;AACD,KAJD;AAKA,GAND;;AAQA,MAAI,CAACpB,aAAL,EAAoB;AACnB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMM,KAAN,CAAP;AACA,GAFD,MAEO;AACN,WAAO,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAEJ,cAA1B;AAA0C,MAAA,MAAM,EAAEJ,MAAlD;AAA0D,MAAA,IAAI,EAAED,IAAhE;AAAsE,MAAA,QAAQ,EAAEM,QAAhF;AAA0F,MAAA,aAAa,EAAEF,aAAzG;AAAwH,MAAA,aAAa,EAAED,aAAvI;AAAsJ,MAAA,cAAc,EAAED,cAAtK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;AACD;;AAED,eAAeH,QAAf","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport PetDetails from './PetDetails';\n\nfunction CardList({ pets, images, onPetSelection, isPetSelected, selectedPetPk, onSearchChange, petLikes }) {\n\tconsole.log(isPetSelected);\n\tconst cards = [];\n\tconst defaultPhotos = [];\n\n\timages.map((img, i) => {\n\t\tif (images[i].defaultPic) {\n\t\t\tdefaultPhotos.push(images[i]);\n\t\t}\n\t});\n\n\tdefaultPhotos.map((photo, i) => {\n\t\tpets.map((pet, j) => {\n\t\t\tif(defaultPhotos[i].pets_id === pets[j].id) {\n\t\t\t\tcards.push(<Card selectedPetPk={selectedPetPk} onPetSelection={onPetSelection} key={pets[j].id} pk={pets[j].id} img={'http://localhost:4412/api/file/' + defaultPhotos[i].url} name={pets[j].name} description={pets[j].description}/>);\n\t\t\t}\n\t\t});\n\t});\n\n\tif (!isPetSelected) {\n\t\treturn <div>{cards}</div>;\n\t} else {\n\t\treturn <PetDetails searchChange={onSearchChange} images={images} pets={pets} petLikes={petLikes} selectedPetPk={selectedPetPk} isPetSelected={isPetSelected} onPetSelection={onPetSelection}/>\n\t}\n}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}