{"ast":null,"code":"var _jsxFileName = \"/Users/nuno/temp/pinder_dev/src/components/Like.js\";\nimport React from 'react';\nimport Popup from \"reactjs-popup\";\n\nfunction makeLike(loggedUser, selectedPetPk) {\n  console.log(loggedUser, selectedPetPk);\n  fetch('http://localhost:4412/api/likes/', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      users_id: loggedUser,\n      pets_id: selectedPetPk,\n      comment: 'love you'\n    })\n  });\n}\n\nfunction logComment(text) {\n  console.log(text);\n}\n\nfunction Like({\n  likes,\n  loggedUser,\n  selectedPetPk\n}) {\n  const thisPetLikes = likes.filter(like => like.pets_id === selectedPetPk);\n  const likedThisPet = thisPetLikes.filter(like => like.users_id === loggedUser);\n  console.log(likedThisPet);\n  const [comment, setComment] = React.useState('');\n\n  if (!likedThisPet.length) {\n    return React.createElement(Popup, {\n      trigger: React.createElement(\"img\", {\n        className: \"pointer\",\n        style: {\n          width: '5%'\n        },\n        src: \"./heart_empty.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }),\n      modal: true,\n      closeOnDocumentClick: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"pa4 black-80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"comment\",\n      className: \"f6 b db mb2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Send a comment\"), React.createElement(\"textarea\", {\n      onChange: e => setComment(e),\n      onid: \"comment\",\n      name: \"comment\",\n      className: \"db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2\",\n      \"aria-describedby\": \"comment-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      onClick: logComment(this.state.comment),\n      className: \"f6 link dim br-pill ba ph3 pv2 mb2 dib black\",\n      href: \"#0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Comment\")))));\n  } else {\n    return React.createElement(\"img\", {\n      style: {\n        width: '5%'\n      },\n      src: \"./heart_full.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    });\n  }\n}\n\nexport default Like; // if (!likedThisPet.length) {\n// \treturn <img onClick={makeLike(loggedUser, selectedPetPk)} className=\"pointer\" style={{width: '5%'}} src=\"./heart_empty.png\" alt=\"\" />\n// } else {\n// \treturn <img style={{width: '5%'}} src=\"./heart_full.png\" alt=\"\" />\n// }","map":{"version":3,"sources":["/Users/nuno/temp/pinder_dev/src/components/Like.js"],"names":["React","Popup","makeLike","loggedUser","selectedPetPk","console","log","fetch","method","headers","body","JSON","stringify","users_id","pets_id","comment","logComment","text","Like","likes","thisPetLikes","filter","like","likedThisPet","setComment","useState","length","width","e","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Popup from \"reactjs-popup\";\n\nfunction makeLike(loggedUser, selectedPetPk) {\n\tconsole.log(loggedUser, selectedPetPk);\n\n\tfetch('http://localhost:4412/api/likes/', {\n\t  method: 'POST',\n\t  headers: {\n\t    'Accept': 'application/json',\n\t    'Content-Type': 'application/json',\n\t  },\n\t  body: JSON.stringify({\n\t    users_id: loggedUser,\n\t    pets_id: selectedPetPk,\n\t    comment: 'love you'\n\t  })\n\t})\n}\n\n\nfunction logComment(text) {\n\tconsole.log(text);\n}\n\nfunction Like({ likes, loggedUser, selectedPetPk }) {\n\n\tconst thisPetLikes = likes.filter((like) => like.pets_id === selectedPetPk);\n\tconst likedThisPet = thisPetLikes.filter((like) => like.users_id === loggedUser);\n\n\tconsole.log(likedThisPet);\n\n\tconst [comment, setComment] = React.useState('');\n\n\tif (!likedThisPet.length) {\n\t\treturn (\n\t\t\t\t<Popup\n    \t\t\ttrigger={<img className=\"pointer\" style={{width: '5%'}} src=\"./heart_empty.png\" alt=\"\" />}\n    \t\t\tmodal\n    \t\t\tcloseOnDocumentClick>\n    \t\t\t<form className=\"pa4 black-80\">\n\t\t\t\t\t  <div>\n\t\t\t\t\t    <label for=\"comment\" className=\"f6 b db mb2\">Send a comment</label>\n\t\t\t\t\t    <textarea onChange={e => setComment(e)} onid=\"comment\" name=\"comment\" className=\"db border-box hover-black w-100 measure ba b--black-20 pa2 br2 mb2\" aria-describedby=\"comment-desc\"></textarea>\n\t\t\t\t\t    <div className=\"tc\"><a onClick={logComment(this.state.comment)} className=\"f6 link dim br-pill ba ph3 pv2 mb2 dib black\" href=\"#0\">Comment</a></div>\n\t\t\t\t\t  </div>\n\t\t\t\t\t</form>\n  \t\t\t</Popup>\n\t\t)\n\t} else {\n\t\treturn <img style={{width: '5%'}} src=\"./heart_full.png\" alt=\"\" />\n\t}\n}\n\nexport default Like;\n\n\t// if (!likedThisPet.length) {\n\t// \treturn <img onClick={makeLike(loggedUser, selectedPetPk)} className=\"pointer\" style={{width: '5%'}} src=\"./heart_empty.png\" alt=\"\" />\n\t// } else {\n\t// \treturn <img style={{width: '5%'}} src=\"./heart_full.png\" alt=\"\" />\n\t// }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}