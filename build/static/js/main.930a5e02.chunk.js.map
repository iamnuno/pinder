{"version":3,"sources":["components/ErrorBoundary.js","components/Nav.js","components/Scroll.js","components/CardList.js","components/Searchbox.js","containers/pets.js","containers/App.js","serviceWorker.js","index.js"],"names":["ErrorBoudary","props","state","hasError","error","info","this","setState","children","React","Component","Nav","className","href","title","src","alt","Scroll","CardList","pets","Error","Searchbox","searchChange","type","placeholder","onChange","id","name","description","img","App","onSearchChange","event","searchField","target","value","filteredPets","filter","pet","toLowerCase","includes","length","ErrorBoundary","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"kTAuBeA,E,YApBd,WAAYC,GAAQ,IAAD,8BAClB,4CAAMA,KACDC,MAAQ,CACZC,UAAU,GAHO,E,+EAODC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACP,2DAEAG,KAAKL,MAAMO,a,GAhBMC,IAAMC,W,MCmBlBC,MAlBf,WACC,OACC,yBAAKC,UAAU,OACd,yBAAKA,UAAU,+CACd,wBAAIA,UAAU,iCAAd,UACC,uBAAGA,UAAU,8DAA8DC,KAAK,IAAIC,MAAM,QACxF,yBAAKC,IAAI,eAAeH,UAAU,mBAAmBI,IAAI,eAE3D,yBAAKJ,UAAU,uCACb,uBAAGA,UAAU,4CAA4CC,KAAK,IAAIC,MAAM,QAAxE,QACA,uBAAGF,UAAU,4CAA4CC,KAAK,IAAIC,MAAM,aAAxE,aACA,uBAAGF,UAAU,4CAA4CC,KAAK,IAAIC,MAAM,gBAAxE,oB,MCHQG,MARf,YAA+B,IAAbT,EAAY,EAAZA,SACjB,OACC,yBAAKI,UAAU,UACbJ,I,MCYWU,MAff,YAEE,MAF0B,EAARC,KAEZ,IAAIC,MAAM,WCUHC,MAbf,YAAsC,IAAjBC,EAAgB,EAAhBA,aACpB,OACC,yBAAKV,UAAU,OACd,2BACCA,UAAU,8GACVW,KAAK,SACLC,YAAY,kBACZC,SAAUH,MCTDH,EAAO,CAClB,CACEO,GAAI,EACJC,KAAM,OACNJ,KAAM,MACNK,YAAa,YACbC,IAAK,cAEP,CACEH,GAAI,EACJC,KAAM,UACNJ,KAAM,MACNK,YAAa,cACbC,IAAK,iBAEP,CACEH,GAAI,EACJC,KAAM,QACNJ,KAAM,MACNK,YAAa,kBACbC,IAAK,eAEL,CACAH,GAAI,EACJC,KAAM,SACNJ,KAAM,MACNK,YAAa,eACbC,IAAK,gBAEP,CACEH,GAAI,EACJC,KAAM,QACNJ,KAAM,MACNK,YAAa,gBACbC,IAAK,eAEP,CACEH,GAAI,EACJC,KAAM,SACNJ,KAAM,MACNK,YAAa,yBACbC,IAAK,gBAEP,CACEH,GAAI,EACJC,KAAM,QACNJ,KAAM,MACNK,YAAa,iBACbC,IAAK,eAEL,CACAH,GAAI,EACJC,KAAM,OACNJ,KAAM,MACNK,YAAa,mBACbC,IAAK,eCTMC,E,YArCd,aAAe,IAAD,8BACb,+CAWDC,eAAiB,SAACC,GACjB,EAAKzB,SAAS,CAAE0B,YAAaD,EAAME,OAAOC,SAX1C,EAAKjC,MAAQ,CACZ,KAAQ,GACR,YAAe,IAJH,E,iFASbI,KAAKC,SAAS,CAAEY,KAAMA,M,+BAOb,IAAD,EACsBb,KAAKJ,MAA3BiB,EADA,EACAA,KAAMc,EADN,EACMA,YACRG,EAAejB,EAAKkB,QAAO,SAAAC,GAChC,OAAOA,EAAIX,KAAKY,cAAcC,SAASP,EAAYM,kBAEpD,OAAQpB,EAAKsB,OAGX,yBAAK7B,UAAU,MACd,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWU,aAAchB,KAAKyB,iBAC9B,kBAAC,EAAD,KACC,kBAACW,EAAD,KACC,kBAAC,EAAD,CAAUvB,KAAMiB,OAPpB,wBAAIxB,UAAU,MAAd,e,GAvBeH,IAAMC,WCIJiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,SD4H1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtD,GACLuD,QAAQvD,MAAMA,EAAMwD,c","file":"static/js/main.930a5e02.chunk.js","sourcesContent":["import React from 'react';\n\nclass ErrorBoudary extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true });\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooops. That's not good :'(</h1>;\n\t\t} else {\n\t\t\treturn this.props.children;\n\t\t}\n\t}\n}\n\nexport default ErrorBoudary;","import React from 'react';\nimport './Nav.css';\n\nfunction Nav() {\n\treturn (\n\t\t<div className=\"pb3\">\n\t\t\t<nav className=\"db dt-l w-100 border-box pa3 ph5-l shadow-1\">\n\t\t\t\t<h3 className=\"pr2 pl2 drak-gray custom-font\">Pinder</h3>\n\t\t\t  <a className=\"db dtc-l v-mid mid-gray link w-100 w-25-l tc tl-l mb2 mb0-l\" href=\"#\" title=\"Home\">\n\t\t\t    <img src=\"./pinder.jpg\" className=\"dib w2 h2 br-100\" alt=\"Site Name\"/>\n\t\t\t  </a>\n\t\t\t  <div className=\"db dtc-l v-mid w-100 w-75-l tc tr-l\">\n\t\t\t    <a className=\"link grow dark-gray f6 f5-l dib mr3 mr4-l\" href=\"#\" title=\"Home\">Home</a>\n\t\t\t    <a className=\"link grow dark-gray f6 f5-l dib mr3 mr4-l\" href=\"#\" title=\"Your Pets\">Your Pets</a>\n\t\t\t    <a className=\"link grow dark-gray f6 f5-l dib mr3 mr4-l\" href=\"#\" title=\"About Pinder\">About Pinder</a>\n\t\t\t  </div>\n\t\t\t</nav>\n\t\t</div>\n\t);\n}\n\nexport default Nav;","import React from 'react';\nimport './Scroll.css';\n\nfunction Scroll({ children }) {\n\treturn (\n\t\t<div className=\"scroll\">\n\t\t\t{children}\n\t\t</div>\n\t)\n}\n\nexport default Scroll;","import React from 'react';\nimport Card from './Card';\n\nfunction CardList({ pets }) {\n\tif (true) {\n\t\tthrow new Error('Noooo!');\n\t}\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\tpets.map((pet, i) => {\n\t\t\t\t\treturn <Card key={pets[i].id} img={pets[i].img} name={pets[i].name} description={pets[i].description}/>\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nfunction Searchbox({ searchChange }) {\n\treturn (\n\t\t<div className=\"ma3\">\n\t\t\t<input \n\t\t\t\tclassName=\"mw-100 w-100 w5-ns f5 input-reset ba b--black-20 pv3 ph4 border-box tc br-pill mb2 bg-washed-green shadow-1\"\n\t\t\t\ttype=\"search\"\n\t\t\t\tplaceholder=\"Search for pets\"\n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default Searchbox;","export const pets = [\n  {\n    id: 0,\n    name: 'Yara',\n    type: 'cat',\n    description: 'The Queen',\n    img: './yara.jpg'\n  },\n  {\n    id: 1,\n    name: 'Jansson',\n    type: 'cat',\n    description: 'I love Nuno',\n    img: './jansson.jpg'\n  },\n  {\n    id: 2,\n    name: 'Masha',\n    type: 'cat',\n    description: 'I\\'m a cutie pie',\n    img: './masha.png'\n  },\n    {\n    id: 3,\n    name: 'Bonnie',\n    type: 'cat',\n    description: 'Scratcherina',\n    img: './bonnie.jpg'\n  },\n  {\n    id: 4,\n    name: 'Daisy',\n    type: 'dog',\n    description: 'I\\'m cray cray',\n    img: './daisy.jpg'\n  },\n  {\n    id: 5,\n    name: 'Scooby',\n    type: 'dog',\n    description: 'I\\'m an attention whore',\n    img: './scooby.jpg'\n  },\n  {\n    id: 6,\n    name: 'Boris',\n    type: 'dog',\n    description: 'Where\\'s Mimmi?',\n    img: './boris.jpg'\n  },\n    {\n    id: 7,\n    name: 'Kizo',\n    type: 'dog',\n    description: 'I make big poops',\n    img: './kizo.jpg'\n  }\n];\n\n","import React from 'react';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Nav from '../components/Nav';\nimport Scroll from '../components/Scroll'\nimport CardList from '../components/CardList';\nimport Searchbox from '../components/Searchbox';\nimport { pets } from './pets';\n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\t'pets': [],\n\t\t\t'searchField': ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ pets: pets});\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchField: event.target.value});\n\t}\n\n\trender() {\n\t\tconst { pets, searchField } = this.state;\n\t\tconst filteredPets = pets.filter(pet => {\n\t\t\treturn pet.name.toLowerCase().includes(searchField.toLowerCase());\n\t\t})\n\t\treturn !pets.length ?\n\t\t\t<h1 className=\"tc\">Loading</h1> :\n\t\t\t(\n\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t<Nav />\n\t\t\t\t\t<Searchbox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t\t<CardList pets={filteredPets} />\n\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />,document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}